#include <iostream>
using namespace std;

// Node structure
struct Node {
    int data;
    Node* next;
};

// Function to insert a new node at the front of the list
void push(Node** head, int newData) {
    Node* newNode = new Node();
    newNode->data = newData;
    newNode->next = *head;
    *head = newNode;
}

// Function to insert a new node at a given position
void insertAfter(Node* prevNode, int newData) {
    if (prevNode == NULL) {
        cout << "prevNode cannot be NULL" << endl;
        return;
    }
    Node* newNode = new Node();
    newNode->data = newData;
    newNode->next = prevNode->next;
    prevNode->next = newNode;
}

// Function to delete a node at a given position
void deleteNode(Node** head, int key) {
    Node* temp = *head, *prev;
    if (temp != NULL && temp->data == key) {
        *head = temp->next;
        delete temp;
        return;
    }
    while (temp != NULL && temp->data != key) {
        prev = temp;
        temp = temp->next;
    }
    if (temp == NULL) return;
    prev->next = temp->next;
    delete temp;
}

// Function to display the linked list
void display(Node* node) {
    while (node != NULL) {
        cout << node->data << " ";
        node = node->next;
    }
    cout << endl;
}

int main() {
    Node* head = NULL;
    push(&head, 7);
    push(&head, 1);
    push(&head, 3);
    cout << "Linked list after push: ";
    display(head);
    insertAfter(head->next, 8);
    cout << "Linked list after insertAfter: ";
    display(head);
    deleteNode(&head, 1);
    cout << "Linked list after deleteNode: ";
    display(head);
    return 0;
}
